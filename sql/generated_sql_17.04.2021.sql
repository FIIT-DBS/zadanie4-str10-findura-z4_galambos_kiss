-- MySQL Script generated by MySQL Workbench
-- Sat Apr 17 17:53:25 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Users` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Users` (
  `id` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `first_and_last_name` VARCHAR(100) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `registered_with` TINYINT NOT NULL,
  `verified` TINYINT NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Gears`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Gears` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Gears` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `attack_cons` DOUBLE NOT NULL,
  `defense_cons` DOUBLE NOT NULL,
  `hp_cons` DOUBLE NOT NULL,
  `inventory_id` INT NULL,
  `weight` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `inventory_id_idx` (`inventory_id` ASC) VISIBLE,
  CONSTRAINT `inventory_id`
    FOREIGN KEY (`inventory_id`)
    REFERENCES `mydb`.`Inventories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipped_gears`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Equipped_gears` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Equipped_gears` (
  `weapon` INT NOT NULL,
  `armour` INT NULL,
  `shield` INT NULL,
  `id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `weapon_idx` (`weapon` ASC) VISIBLE,
  INDEX `armour_idx` (`armour` ASC) VISIBLE,
  INDEX `shield_idx` (`shield` ASC) VISIBLE,
  CONSTRAINT `weapon`
    FOREIGN KEY (`weapon`)
    REFERENCES `mydb`.`Gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `armour`
    FOREIGN KEY (`armour`)
    REFERENCES `mydb`.`Gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `shield`
    FOREIGN KEY (`shield`)
    REFERENCES `mydb`.`Gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Inventories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Inventories` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Inventories` (
  `id` INT NOT NULL,
  `equipped_gears_id` INT NOT NULL,
  `capacity` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `equipped_gears_id_idx` (`equipped_gears_id` ASC) VISIBLE,
  CONSTRAINT `equipped_gear_id`
    FOREIGN KEY (`equipped_gears_id`)
    REFERENCES `mydb`.`Equipped_gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Roles` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Roles` (
  `id` INT NOT NULL,
  `attack_cons` DOUBLE NULL,
  `defense_cons` DOUBLE NULL,
  `hp_cons` DOUBLE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Characters` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Characters` (
  `id` INT NOT NULL,
  `owner` INT NOT NULL,
  `role` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `level` SMALLINT UNSIGNED NOT NULL,
  `exp` BIGINT NOT NULL,
  `is_online` TINYINT NULL,
  `quests_count` TINYINT NULL,
  `inventory_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `inventory_id_idx` (`inventory_id` ASC) VISIBLE,
  INDEX `role_idx` (`role` ASC) VISIBLE,
  CONSTRAINT `owner`
    FOREIGN KEY (`id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `inventory_id`
    FOREIGN KEY (`inventory_id`)
    REFERENCES `mydb`.`Inventories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role`
    FOREIGN KEY (`role`)
    REFERENCES `mydb`.`Roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Friendships`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Friendships` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Friendships` (
  `id` INT NOT NULL,
  `id_requester` INT NOT NULL,
  `id_adressee` INT NOT NULL,
  `status` TINYINT NOT NULL,
  INDEX `id_requester_idx` (`id_requester` ASC) VISIBLE,
  INDEX `id_addressee_idx` (`id_adressee` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `id_requester`
    FOREIGN KEY (`id_requester`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_addressee`
    FOREIGN KEY (`id_adressee`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Maps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Maps` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Maps` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `required_level` VARCHAR(45) NOT NULL,
  `height` VARCHAR(45) NOT NULL,
  `width` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Monster_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Monster_types` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Monster_types` (
  `id` INT NOT NULL,
  `attack_cons` DOUBLE NOT NULL,
  `defense_cons` DOUBLE NOT NULL,
  `hp_cons` DOUBLE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Monsters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Monsters` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Monsters` (
  `id` INT NOT NULL,
  `is_boss` TINYINT NULL,
  `name` VARCHAR(45) NOT NULL,
  `level` INT NOT NULL,
  `is_available` TINYINT NOT NULL,
  `exp_for_kill` INT NOT NULL,
  `is_killed` TINYINT NULL,
  `type` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `type_idx` (`type` ASC) VISIBLE,
  CONSTRAINT `type`
    FOREIGN KEY (`type`)
    REFERENCES `mydb`.`Monster_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Character_stats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Character_stats` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Character_stats` (
  `id` INT NOT NULL,
  `hp` TINYINT NOT NULL,
  `lives` TINYINT NOT NULL,
  `attack` INT NOT NULL,
  `defense` INT NOT NULL,
  `x_position` INT NULL,
  `y_position` INT NULL,
  `map_id` INT NOT NULL,
  `character_id` INT NULL,
  `speed` INT NULL,
  INDEX `map_id_idx` (`map_id` ASC) VISIBLE,
  CONSTRAINT `map_id`
    FOREIGN KEY (`map_id`)
    REFERENCES `mydb`.`Maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `character_id`
    FOREIGN KEY (`character_id`)
    REFERENCES `mydb`.`Characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Quests`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Quests` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Quests` (
  `id` INT NOT NULL,
  `required_level` INT NULL,
  `required_to complete` INT NULL COMMENT 'required amount of quests to have completed before accepting a specific quest',
  `exp_for_completing` INT NULL,
  `difficulty` TINYINT NULL,
  `on_map` INT NULL,
  `text` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `on_map_idx` (`on_map` ASC) VISIBLE,
  CONSTRAINT `on_map`
    FOREIGN KEY (`on_map`)
    REFERENCES `mydb`.`Maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Teams` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Teams` (
  `id` INT NOT NULL,
  `admin_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `admin_id_idx` (`admin_id` ASC) VISIBLE,
  CONSTRAINT `admin_id`
    FOREIGN KEY (`admin_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Members` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Members` (
  `member_id` INT NOT NULL COMMENT 'id of the user (member) in team',
  `team_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`member_id`),
  UNIQUE INDEX `member_id_UNIQUE` (`member_id` ASC) VISIBLE,
  INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `team_id_idx` (`team_id` ASC) VISIBLE,
  CONSTRAINT `team_id`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`Teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Skills`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Skills` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Skills` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `required_skill_id` INT NOT NULL,
  `required_level` TINYINT NULL,
  `role_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `required_skill_id_idx` (`required_skill_id` ASC) VISIBLE,
  INDEX `role_id_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `required_skill_id`
    FOREIGN KEY (`required_skill_id`)
    REFERENCES `mydb`.`Skills` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`Roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Conversations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Conversations` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Conversations` (
  `id` INT NOT NULL,
  `receiver_id` INT NOT NULL,
  `sender_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `receiver_id_idx` (`receiver_id` ASC) VISIBLE,
  INDEX `sender_id_idx` (`sender_id` ASC) VISIBLE,
  CONSTRAINT `receiver_id`
    FOREIGN KEY (`receiver_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_id`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Messages` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Messages` (
  `id` INT NOT NULL,
  `sender_id` INT NOT NULL,
  `sent_at` DATETIME NULL,
  `text` VARCHAR(100) NULL,
  `conversation_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `sender_id_idx` (`sender_id` ASC) VISIBLE,
  INDEX `converation_id_idx` (`conversation_id` ASC) VISIBLE,
  CONSTRAINT `sender_id`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `conversation_id`
    FOREIGN KEY (`conversation_id`)
    REFERENCES `mydb`.`Conversations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Loots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Loots` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Loots` (
  `id` INT NOT NULL,
  `x_position` INT NULL,
  `y_position` INT NULL,
  `gear_id` INT NULL,
  `map_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `gear_id_idx` (`gear_id` ASC) VISIBLE,
  INDEX `map_id_idx` (`map_id` ASC) VISIBLE,
  CONSTRAINT `gear_id`
    FOREIGN KEY (`gear_id`)
    REFERENCES `mydb`.`Gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `map_id`
    FOREIGN KEY (`map_id`)
    REFERENCES `mydb`.`Maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Team_messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Team_messages` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Team_messages` (
  `id` INT NOT NULL,
  `team_id` INT NULL,
  `sender_id` INT NULL,
  `sent_at` DATETIME NULL,
  `text` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `team_id_idx` (`team_id` ASC) VISIBLE,
  INDEX `sender_id_idx` (`sender_id` ASC) VISIBLE,
  CONSTRAINT `team_id`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`Teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_id`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Monster_stats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Monster_stats` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Monster_stats` (
  `id` INT NOT NULL,
  `hp` INT NULL,
  `lives` TINYINT NULL,
  `attack` DOUBLE NULL,
  `defense` DOUBLE NULL,
  `x_position` INT NULL,
  `y_position` INT NULL,
  `map_id` INT NULL,
  `monster_id` INT NULL,
  `speed` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `map_id_idx` (`map_id` ASC) VISIBLE,
  INDEX `monster_id_idx` (`monster_id` ASC) VISIBLE,
  CONSTRAINT `map_id`
    FOREIGN KEY (`map_id`)
    REFERENCES `mydb`.`Maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `monster_id`
    FOREIGN KEY (`monster_id`)
    REFERENCES `mydb`.`Monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Battle_logs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Battle_logs` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Battle_logs` (
  `id` INT NOT NULL,
  `attacker_character_id` INT NULL,
  `attacker_monster_id` INT NULL,
  `targer_character_id` INT NULL,
  `target_monster_id` INT NULL,
  `team1_id` INT NULL,
  `team2_id` INT NULL,
  `damage_to_character` INT NULL,
  `damage_to_monster` INT NULL,
  `hit_by` INT NULL,
  `used_skill` INT NULL,
  `exp_difference` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `attacker_character_id_idx` (`attacker_character_id` ASC) VISIBLE,
  INDEX `attacker_monster_id_idx` (`attacker_monster_id` ASC) VISIBLE,
  INDEX `target_character_id_idx` (`targer_character_id` ASC) VISIBLE,
  INDEX `target_monster_id_idx` (`target_monster_id` ASC) VISIBLE,
  INDEX `team1_id_idx` (`team1_id` ASC) VISIBLE,
  INDEX `team2_id_idx` (`team2_id` ASC) VISIBLE,
  INDEX `hit_by_idx` (`hit_by` ASC) VISIBLE,
  INDEX `used_skill_idx` (`used_skill` ASC) VISIBLE,
  CONSTRAINT `attacker_character_id`
    FOREIGN KEY (`attacker_character_id`)
    REFERENCES `mydb`.`Characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `attacker_monster_id`
    FOREIGN KEY (`attacker_monster_id`)
    REFERENCES `mydb`.`Monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `target_character_id`
    FOREIGN KEY (`targer_character_id`)
    REFERENCES `mydb`.`Characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `target_monster_id`
    FOREIGN KEY (`target_monster_id`)
    REFERENCES `mydb`.`Monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `team1_id`
    FOREIGN KEY (`team1_id`)
    REFERENCES `mydb`.`Teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `team2_id`
    FOREIGN KEY (`team2_id`)
    REFERENCES `mydb`.`Teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hit_by`
    FOREIGN KEY (`hit_by`)
    REFERENCES `mydb`.`Gears` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `used_skill`
    FOREIGN KEY (`used_skill`)
    REFERENCES `mydb`.`Skills` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
