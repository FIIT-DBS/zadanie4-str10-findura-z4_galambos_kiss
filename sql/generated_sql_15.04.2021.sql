-- MySQL Script generated by MySQL Workbench
-- Thu Apr 15 20:40:51 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Battle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Battle` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Battle` (
  `id` INT NOT NULL,
  `type` INT NULL,
  `winner_id` INT NOT NULL,
  `character_id` INT NULL,
  `team1_id` INT NULL,
  `team2_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `battle_type_idx` (`type` ASC) VISIBLE,
  INDEX `winner_id_idx` (`winner_id` ASC) VISIBLE,
  INDEX `character_id_idx` (`character_id` ASC) VISIBLE,
  INDEX `team2_id_idx` (`team2_id` ASC) VISIBLE,
  INDEX `team1_id_idx` (`team1_id` ASC) VISIBLE,
  CONSTRAINT `type_pve`
    FOREIGN KEY (`type`)
    REFERENCES `mydb`.`pve_battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `type_pvp`
    FOREIGN KEY (`type`)
    REFERENCES `mydb`.`pvp_battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `winner_id`
    FOREIGN KEY (`winner_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `winner_id`
    FOREIGN KEY (`winner_id`)
    REFERENCES `mydb`.`monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `character_id`
    FOREIGN KEY (`character_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `team2_id`
    FOREIGN KEY (`team2_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `team1_id`
    FOREIGN KEY (`team1_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Message` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Message` (
  `id` INT NOT NULL,
  `sender_id` INT NOT NULL,
  `sent_at` DATETIME NULL,
  `text` VARCHAR(100) NULL,
  `conversation_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `sender_id_idx` (`sender_id` ASC) VISIBLE,
  INDEX `converation_id_idx` (`conversation_id` ASC) VISIBLE,
  CONSTRAINT `sender_id`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `conversation_id`
    FOREIGN KEY (`conversation_id`)
    REFERENCES `mydb`.`conversations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `conversation_id`
    FOREIGN KEY (`conversation_id`)
    REFERENCES `mydb`.`Team_conversations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Team_conversations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Team_conversations` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Team_conversations` (
  `id` INT NOT NULL,
  `team_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `team_id_idx` (`team_id` ASC) VISIBLE,
  CONSTRAINT `team_id`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`characters` ;

CREATE TABLE IF NOT EXISTS `mydb`.`characters` (
  `id` INT NOT NULL,
  `owner` INT NOT NULL,
  `role` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `level` SMALLINT UNSIGNED NOT NULL,
  `exp` BIGINT NOT NULL,
  `is_online` TINYINT NULL,
  `quests_count` TINYINT NULL,
  `inventory_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `inventory_id_idx` (`inventory_id` ASC) VISIBLE,
  INDEX `role_idx` (`role` ASC) VISIBLE,
  CONSTRAINT `owner`
    FOREIGN KEY (`id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `inventory_id`
    FOREIGN KEY (`inventory_id`)
    REFERENCES `mydb`.`inventory` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role`
    FOREIGN KEY (`role`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`combat_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`combat_log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`combat_log` (
  `id` INT NULL,
  `attacker_id` INT NOT NULL,
  `hit_number` SMALLINT NOT NULL,
  `hit_by` INT NOT NULL,
  `used_skill` INT NOT NULL,
  `exp_difference` INT NOT NULL,
  `battle_type_id` INT NOT NULL,
  INDEX `hit_by_idx` (`hit_by` ASC) VISIBLE,
  INDEX `used_skill_idx` (`used_skill` ASC) VISIBLE,
  UNIQUE INDEX `hit_number_UNIQUE` (`hit_number` ASC) VISIBLE,
  INDEX `battle_id_idx` (`battle_type_id` ASC) VISIBLE,
  CONSTRAINT `attacker_id`
    FOREIGN KEY (`id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hit_by`
    FOREIGN KEY (`hit_by`)
    REFERENCES `mydb`.`gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `used_skill`
    FOREIGN KEY (`used_skill`)
    REFERENCES `mydb`.`skills` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `battle_type_pve`
    FOREIGN KEY (`battle_type_id`)
    REFERENCES `mydb`.`pve_battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `battle_type_pvp`
    FOREIGN KEY (`battle_type_id`)
    REFERENCES `mydb`.`pvp_battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`conversations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conversations` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conversations` (
  `id` INT NOT NULL,
  `receiver_id` INT NOT NULL,
  `sender_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `receiver_id_idx` (`receiver_id` ASC) VISIBLE,
  INDEX `sender_id_idx` (`sender_id` ASC) VISIBLE,
  CONSTRAINT `receiver_id`
    FOREIGN KEY (`receiver_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_id`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`creature_stats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`creature_stats` ;

CREATE TABLE IF NOT EXISTS `mydb`.`creature_stats` (
  `id` INT NOT NULL,
  `hp` TINYINT NOT NULL,
  `lives` TINYINT NOT NULL,
  `attack` INT NOT NULL,
  `defense` INT NOT NULL,
  `x_position` INT NULL,
  `y_position` INT NULL,
  `map_id` INT NOT NULL,
  `creature_id` INT NULL,
  INDEX `map_id_idx` (`map_id` ASC) VISIBLE,
  INDEX `creature_id_idx` (`creature_id` ASC) VISIBLE,
  CONSTRAINT `creature_id`
    FOREIGN KEY (`creature_id`)
    REFERENCES `mydb`.`monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `map_id`
    FOREIGN KEY (`map_id`)
    REFERENCES `mydb`.`maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `creature_id`
    FOREIGN KEY (`creature_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`equipped_gear`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`equipped_gear` ;

CREATE TABLE IF NOT EXISTS `mydb`.`equipped_gear` (
  `weapon` INT NOT NULL,
  `armour` INT NULL,
  `shield` INT NULL,
  `id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `weapon_idx` (`weapon` ASC) VISIBLE,
  INDEX `armour_idx` (`armour` ASC) VISIBLE,
  INDEX `shield_idx` (`shield` ASC) VISIBLE,
  CONSTRAINT `weapon`
    FOREIGN KEY (`weapon`)
    REFERENCES `mydb`.`gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `armour`
    FOREIGN KEY (`armour`)
    REFERENCES `mydb`.`gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `shield`
    FOREIGN KEY (`shield`)
    REFERENCES `mydb`.`gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`friendships`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`friendships` ;

CREATE TABLE IF NOT EXISTS `mydb`.`friendships` (
  `id_requester` INT NOT NULL,
  `id_adressee` INT NOT NULL,
  `status` TINYINT NOT NULL,
  INDEX `id_requester_idx` (`id_requester` ASC) VISIBLE,
  INDEX `id_addressee_idx` (`id_adressee` ASC) VISIBLE,
  CONSTRAINT `id_requester`
    FOREIGN KEY (`id_requester`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_addressee`
    FOREIGN KEY (`id_adressee`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`gear`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gear` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gear` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `attack_cons` DOUBLE NOT NULL,
  `defense_cons` DOUBLE NOT NULL,
  `hp_cons` DOUBLE NOT NULL,
  `inventory_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `inventory_id_idx` (`inventory_id` ASC) VISIBLE,
  CONSTRAINT `inventory_id`
    FOREIGN KEY (`inventory_id`)
    REFERENCES `mydb`.`inventory` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`inventory` ;

CREATE TABLE IF NOT EXISTS `mydb`.`inventory` (
  `id` INT NOT NULL,
  `equipped_gear_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `equipped_gear_id_idx` (`equipped_gear_id` ASC) VISIBLE,
  CONSTRAINT `equipped_gear_id`
    FOREIGN KEY (`equipped_gear_id`)
    REFERENCES `mydb`.`equipped_gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`loot`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loot` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loot` (
  `id` INT NOT NULL,
  `x_position` INT NULL,
  `y_position` INT NULL,
  `gear_id` INT NULL,
  `loot_list_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `gear_id_idx` (`gear_id` ASC) VISIBLE,
  INDEX `loot_list_id_idx` (`loot_list_id` ASC) VISIBLE,
  CONSTRAINT `gear_id`
    FOREIGN KEY (`gear_id`)
    REFERENCES `mydb`.`gear` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `loot_list_id`
    FOREIGN KEY (`loot_list_id`)
    REFERENCES `mydb`.`loot_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`loot_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loot_list` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loot_list` (
  `id` INT NOT NULL,
  `map_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `map_id_idx` (`map_id` ASC) VISIBLE,
  CONSTRAINT `map_id`
    FOREIGN KEY (`map_id`)
    REFERENCES `mydb`.`maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`maps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`maps` ;

CREATE TABLE IF NOT EXISTS `mydb`.`maps` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `required_level` VARCHAR(45) NOT NULL,
  `height` VARCHAR(45) NOT NULL,
  `width` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`members` ;

CREATE TABLE IF NOT EXISTS `mydb`.`members` (
  `member_id` INT NOT NULL COMMENT 'id of the user (member) in team',
  `team_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`member_id`),
  UNIQUE INDEX `member_id_UNIQUE` (`member_id` ASC) VISIBLE,
  INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `team_id_idx` (`team_id` ASC) VISIBLE,
  CONSTRAINT `team_id`
    FOREIGN KEY (`team_id`)
    REFERENCES `mydb`.`teams` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`monsters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`monsters` ;

CREATE TABLE IF NOT EXISTS `mydb`.`monsters` (
  `id` INT NOT NULL,
  `is_boss` TINYINT NULL,
  `name` VARCHAR(45) NOT NULL,
  `level` INT NOT NULL,
  `is_available` TINYINT NOT NULL,
  `exp_for_kill` INT NOT NULL,
  `is_killed` TINYINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pve_battle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pve_battle` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pve_battle` (
  `id` INT NOT NULL,
  `character_id` INT NOT NULL,
  `monster_id` INT NOT NULL,
  `battle_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `attacker_id_idx` (`character_id` ASC) VISIBLE,
  INDEX `monster_id_idx` (`monster_id` ASC) VISIBLE,
  INDEX `combat_log_id_idx` (`battle_id` ASC) VISIBLE,
  CONSTRAINT `attacker_id`
    FOREIGN KEY (`character_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `monster_id`
    FOREIGN KEY (`monster_id`)
    REFERENCES `mydb`.`monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `battle_id`
    FOREIGN KEY (`battle_id`)
    REFERENCES `mydb`.`Battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pvp_battle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pvp_battle` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pvp_battle` (
  `id` INT NOT NULL,
  `player1_id` INT NULL,
  `player2_id` INT NULL,
  `battle_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `player1_id_idx` (`player1_id` ASC) VISIBLE,
  INDEX `player2_id_idx` (`player2_id` ASC) VISIBLE,
  INDEX `combat_log_id_idx` (`battle_id` ASC) VISIBLE,
  CONSTRAINT `player1_id`
    FOREIGN KEY (`player1_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `player2_id`
    FOREIGN KEY (`player2_id`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `battle_id`
    FOREIGN KEY (`battle_id`)
    REFERENCES `mydb`.`Battle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`quests`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`quests` ;

CREATE TABLE IF NOT EXISTS `mydb`.`quests` (
  `id` INT NOT NULL,
  `required_level` INT NULL,
  `required_to complete` INT NULL COMMENT 'required amount of quests to have completed before accepting a specific quest',
  `completed` TINYINT NULL,
  `exp_for_completing` INT NULL,
  `difficulty` TINYINT NULL,
  `accepted_by` INT NOT NULL,
  `on_map` INT NOT NULL,
  `text` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `on_map_idx` (`on_map` ASC) VISIBLE,
  INDEX `accepted_by_idx` (`accepted_by` ASC) VISIBLE,
  CONSTRAINT `accepted_by`
    FOREIGN KEY (`accepted_by`)
    REFERENCES `mydb`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `on_map`
    FOREIGN KEY (`on_map`)
    REFERENCES `mydb`.`maps` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`roles` ;

CREATE TABLE IF NOT EXISTS `mydb`.`roles` (
  `id` INT NOT NULL,
  `attack_cons` DOUBLE NULL,
  `defense_cons` DOUBLE NULL,
  `hp_cons` DOUBLE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`skill_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`skill_list` ;

CREATE TABLE IF NOT EXISTS `mydb`.`skill_list` (
  `id` INT NOT NULL,
  `role_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `role_id_id` (`role_id` ASC) INVISIBLE,
  CONSTRAINT `role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`skills`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`skills` ;

CREATE TABLE IF NOT EXISTS `mydb`.`skills` (
  `id` INT NOT NULL,
  `skill_list_id` INT NULL,
  `name` VARCHAR(45) NULL,
  `required_skill_id` INT NOT NULL,
  `required_level` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `skill_list_id_idx` (`skill_list_id` ASC) VISIBLE,
  INDEX `required_skill_id_idx` (`required_skill_id` ASC) VISIBLE,
  CONSTRAINT `skill_list_id`
    FOREIGN KEY (`skill_list_id`)
    REFERENCES `mydb`.`skill_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `required_skill_id`
    FOREIGN KEY (`required_skill_id`)
    REFERENCES `mydb`.`skills` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`teams` ;

CREATE TABLE IF NOT EXISTS `mydb`.`teams` (
  `id` INT NOT NULL,
  `admin_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `admin_id_idx` (`admin_id` ASC) VISIBLE,
  CONSTRAINT `admin_id`
    FOREIGN KEY (`admin_id`)
    REFERENCES `mydb`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`users` ;

CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `id` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `first_and_last_name` VARCHAR(100) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `registered_with` TINYINT NOT NULL,
  `verified` TINYINT NOT NULL,
  `date_of_birth` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
